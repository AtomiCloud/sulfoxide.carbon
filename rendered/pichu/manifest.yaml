---
# Source: atomi-app-of-apps/templates/applications.yaml
---

---
# Source: atomi-app-of-apps/templates/applications.yaml
---

---
# Source: atomi-app-of-apps/templates/applications.yaml
---

---
# Source: atomi-app-of-apps/templates/applications.yaml
---

---
# Source: atomi-app-of-apps/templates/applications.yaml
---

---
# Source: atomi-app-of-apps/templates/projects.yaml
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: bootstrap
  labels:
    helm.sh/chart: atomi-app-of-apps-1.0.0
    app.kubernetes.io/name: atomi-app-of-apps
    app.kubernetes.io/instance: app-of-apps
    "atomi.cloud/landscape": "pichu"
    "atomi.cloud/layer": "1"
    "atomi.cloud/platform": "systems"
    "atomi.cloud/service": "bootstrap"
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm

  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations:
    "atomi.cloud/landscape": "pichu"
    "atomi.cloud/layer": "1"
    "atomi.cloud/platform": "systems"
    "atomi.cloud/service": "bootstrap"
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  description: "Bootstrap Project used to setup the cluster"

  sourceRepos:
    - "*"

  destinations:
    - namespace: "*"
      server: "*"

  clusterResourceWhitelist:
    - group: "*"
      kind: "*"

  orphanedResources:
    warn: false
---
# Source: atomi-app-of-apps/templates/applications.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: pichu-kyverno
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations:
    "atomi.cloud/landscape": "pichu"
    "atomi.cloud/layer": "1"
    "atomi.cloud/platform": "systems"
    "atomi.cloud/service": "bootstrap"
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
    argocd.argoproj.io/sync-wave: "0"
  labels:
    helm.sh/chart: atomi-app-of-apps-1.0.0
    app.kubernetes.io/name: atomi-app-of-apps
    app.kubernetes.io/instance: app-of-apps
    "atomi.cloud/landscape": "pichu"
    "atomi.cloud/layer": "1"
    "atomi.cloud/platform": "systems"
    "atomi.cloud/service": "bootstrap"
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
    tr8.io/bootstrap-type: agnostic
spec:
  project: bootstrap
  source:
    repoURL: https://github.com/AtomiCloud/helm.systems_kyverno
    targetRevision: HEAD
    path: chart
    helm:
      passCredentials: false
      parameters: []
      releaseName: kyverno
      valueFiles:
        - values.yaml
        - values.pichu.yaml
      ignoreMissingValueFiles: false
      skipCrds: false
  destination:
    server: pichu-main
    namespace: policy-engine
  ignoreDifferences:
    - kind: "Secret"
      jsonPointers:
        - /data
  # Sync policy
  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
      allowEmpty: true # Allows deleting all application resources during automatic syncing ( false by default ).
    syncOptions: # Sync options which modifies sync behavior
      - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
      - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.
      - PruneLast=true # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation
      - Replace=true # Because kubectl adds metadata that will cross the limit allowed by Kubernetes, Replace overcomes this limitation.
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  revisionHistoryLimit: 3
