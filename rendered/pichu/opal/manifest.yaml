---
# Source: atomi-app-of-apps/templates/applications.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: pichu-opal-cert-manager
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations:
    "atomi.cloud/cluster": "opal"
    "atomi.cloud/landscape": "pichu"
    "atomi.cloud/layer": "1"
    "atomi.cloud/platform": "systems"
    "atomi.cloud/service": "bootstrap"
    argocd.argoproj.io/sync-wave: "2"
  labels:
    helm.sh/chart: atomi-app-of-apps-1.0.0
    app.kubernetes.io/name: atomi-app-of-apps
    app.kubernetes.io/instance: app-of-apps
    "atomi.cloud/cluster": "opal"
    "atomi.cloud/landscape": "pichu"
    "atomi.cloud/layer": "1"
    "atomi.cloud/platform": "systems"
    "atomi.cloud/service": "bootstrap"
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
    atomi.cloud/bootstrap-type: agnostic
spec:
  project: default
  source:
    repoURL: https://github.com/AtomiCloud/helm.systems_cert-manager
    targetRevision: HEAD
    path: chart
    helm:
      ignoreMissingValueFiles: false
      parameters: []
      passCredentials: false
      releaseName: cert-manager
      skipCrds: false
      valueFiles:
        - values.yaml
        - values.pichu.opal.yaml
  destination:
    server: https://d1943bf9-8108-45d0-a666-9782e2e848c7.vultr-k8s.com:6443
    namespace: cert-manager
  # Sync policy
  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
      allowEmpty: true # Allows deleting all application resources during automatic syncing ( false by default ).
    syncOptions: # Sync options which modifies sync behavior
      - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
      - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.
      - PruneLast=true # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation
      - Replace=true # Because kubectl adds metadata that will cross the limit allowed by Kubernetes, Replace overcomes this limitation.
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  revisionHistoryLimit: 3
---
# Source: atomi-app-of-apps/templates/applications.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: pichu-opal-cloudflared
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations:
    "atomi.cloud/cluster": "opal"
    "atomi.cloud/landscape": "pichu"
    "atomi.cloud/layer": "1"
    "atomi.cloud/platform": "systems"
    "atomi.cloud/service": "bootstrap"
    argocd.argoproj.io/sync-wave: "2"
  labels:
    helm.sh/chart: atomi-app-of-apps-1.0.0
    app.kubernetes.io/name: atomi-app-of-apps
    app.kubernetes.io/instance: app-of-apps
    "atomi.cloud/cluster": "opal"
    "atomi.cloud/landscape": "pichu"
    "atomi.cloud/layer": "1"
    "atomi.cloud/platform": "systems"
    "atomi.cloud/service": "bootstrap"
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
    atomi.cloud/bootstrap-type: agnostic
spec:
  project: default
  source:
    repoURL: https://github.com/AtomiCloud/helm.systems_cloudflared
    targetRevision: HEAD
    path: chart
    helm:
      ignoreMissingValueFiles: false
      parameters: []
      passCredentials: false
      releaseName: cloudflared
      skipCrds: false
      valueFiles:
        - values.yaml
        - values.pichu.opal.yaml
  destination:
    server: https://d1943bf9-8108-45d0-a666-9782e2e848c7.vultr-k8s.com:6443
    namespace: internal-ingress
  # Sync policy
  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
      allowEmpty: true # Allows deleting all application resources during automatic syncing ( false by default ).
    syncOptions: # Sync options which modifies sync behavior
      - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
      - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.
      - PruneLast=true # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation
      - Replace=true # Because kubectl adds metadata that will cross the limit allowed by Kubernetes, Replace overcomes this limitation.
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  revisionHistoryLimit: 3
---
# Source: atomi-app-of-apps/templates/applications.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: pichu-opal-cluster-issuer
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations:
    "atomi.cloud/cluster": "opal"
    "atomi.cloud/landscape": "pichu"
    "atomi.cloud/layer": "1"
    "atomi.cloud/platform": "systems"
    "atomi.cloud/service": "bootstrap"
    argocd.argoproj.io/sync-wave: "3"
  labels:
    helm.sh/chart: atomi-app-of-apps-1.0.0
    app.kubernetes.io/name: atomi-app-of-apps
    app.kubernetes.io/instance: app-of-apps
    "atomi.cloud/cluster": "opal"
    "atomi.cloud/landscape": "pichu"
    "atomi.cloud/layer": "1"
    "atomi.cloud/platform": "systems"
    "atomi.cloud/service": "bootstrap"
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
    atomi.cloud/bootstrap-type: agnostic
spec:
  project: default
  source:
    repoURL: https://github.com/AtomiCloud/helm.systems_cluster-issuer
    targetRevision: HEAD
    path: chart
    helm:
      ignoreMissingValueFiles: false
      parameters: []
      passCredentials: false
      releaseName: cluster-issuer
      skipCrds: false
      valueFiles:
        - values.yaml
        - values.pichu.opal.yaml
  destination:
    server: https://d1943bf9-8108-45d0-a666-9782e2e848c7.vultr-k8s.com:6443
    namespace: cert-manager
  # Sync policy
  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
      allowEmpty: true # Allows deleting all application resources during automatic syncing ( false by default ).
    syncOptions: # Sync options which modifies sync behavior
      - CreateNamespace=false # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
      - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.
      - PruneLast=true # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation
      - Replace=true # Because kubectl adds metadata that will cross the limit allowed by Kubernetes, Replace overcomes this limitation.
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  revisionHistoryLimit: 3
---
# Source: atomi-app-of-apps/templates/applications.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: pichu-opal-keda
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations:
    "atomi.cloud/cluster": "opal"
    "atomi.cloud/landscape": "pichu"
    "atomi.cloud/layer": "1"
    "atomi.cloud/platform": "systems"
    "atomi.cloud/service": "bootstrap"
    argocd.argoproj.io/sync-wave: "3"
  labels:
    helm.sh/chart: atomi-app-of-apps-1.0.0
    app.kubernetes.io/name: atomi-app-of-apps
    app.kubernetes.io/instance: app-of-apps
    "atomi.cloud/cluster": "opal"
    "atomi.cloud/landscape": "pichu"
    "atomi.cloud/layer": "1"
    "atomi.cloud/platform": "systems"
    "atomi.cloud/service": "bootstrap"
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
    atomi.cloud/bootstrap-type: agnostic
spec:
  project: default
  source:
    repoURL: https://github.com/AtomiCloud/helm.systems_keda
    targetRevision: HEAD
    path: chart
    helm:
      ignoreMissingValueFiles: false
      parameters: []
      passCredentials: false
      releaseName: keda
      skipCrds: false
      valueFiles:
        - values.yaml
        - values.pichu.opal.yaml
  destination:
    server: https://d1943bf9-8108-45d0-a666-9782e2e848c7.vultr-k8s.com:6443
    namespace: keda
  # Sync policy
  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
      allowEmpty: true # Allows deleting all application resources during automatic syncing ( false by default ).
    syncOptions: # Sync options which modifies sync behavior
      - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
      - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.
      - PruneLast=true # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation
      - Replace=true # Because kubectl adds metadata that will cross the limit allowed by Kubernetes, Replace overcomes this limitation.
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  revisionHistoryLimit: 3
---
# Source: atomi-app-of-apps/templates/applications.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: pichu-opal-kong
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations:
    "atomi.cloud/cluster": "opal"
    "atomi.cloud/landscape": "pichu"
    "atomi.cloud/layer": "1"
    "atomi.cloud/platform": "systems"
    "atomi.cloud/service": "bootstrap"
    argocd.argoproj.io/sync-wave: "4"
  labels:
    helm.sh/chart: atomi-app-of-apps-1.0.0
    app.kubernetes.io/name: atomi-app-of-apps
    app.kubernetes.io/instance: app-of-apps
    "atomi.cloud/cluster": "opal"
    "atomi.cloud/landscape": "pichu"
    "atomi.cloud/layer": "1"
    "atomi.cloud/platform": "systems"
    "atomi.cloud/service": "bootstrap"
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
    atomi.cloud/bootstrap-type: agnostic
spec:
  project: default
  source:
    repoURL: https://github.com/AtomiCloud/helm.systems_kong-ingress
    targetRevision: HEAD
    path: chart
    helm:
      ignoreMissingValueFiles: false
      parameters: []
      passCredentials: false
      releaseName: kong
      skipCrds: false
      valueFiles:
        - values.yaml
        - values.pichu.opal.yaml
  destination:
    server: https://d1943bf9-8108-45d0-a666-9782e2e848c7.vultr-k8s.com:6443
    namespace: external-ingress
  # Sync policy
  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
      allowEmpty: true # Allows deleting all application resources during automatic syncing ( false by default ).
    syncOptions: # Sync options which modifies sync behavior
      - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
      - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.
      - PruneLast=true # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation
      - Replace=true # Because kubectl adds metadata that will cross the limit allowed by Kubernetes, Replace overcomes this limitation.
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  revisionHistoryLimit: 3
---
# Source: atomi-app-of-apps/templates/applications.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: pichu-opal-kyverno
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations:
    "atomi.cloud/cluster": "opal"
    "atomi.cloud/landscape": "pichu"
    "atomi.cloud/layer": "1"
    "atomi.cloud/platform": "systems"
    "atomi.cloud/service": "bootstrap"
    argocd.argoproj.io/sync-wave: "0"
  labels:
    helm.sh/chart: atomi-app-of-apps-1.0.0
    app.kubernetes.io/name: atomi-app-of-apps
    app.kubernetes.io/instance: app-of-apps
    "atomi.cloud/cluster": "opal"
    "atomi.cloud/landscape": "pichu"
    "atomi.cloud/layer": "1"
    "atomi.cloud/platform": "systems"
    "atomi.cloud/service": "bootstrap"
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
    atomi.cloud/bootstrap-type: agnostic
spec:
  project: default
  source:
    repoURL: https://github.com/AtomiCloud/helm.systems_kyverno
    targetRevision: HEAD
    path: chart
    helm:
      ignoreMissingValueFiles: false
      parameters: []
      passCredentials: false
      releaseName: pichu-opal-kyverno
      skipCrds: false
      valueFiles:
        - values.yaml
        - values.pichu.opal.yaml
  destination:
    server: https://d1943bf9-8108-45d0-a666-9782e2e848c7.vultr-k8s.com:6443
    namespace: policy-engine
  # Sync policy
  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
      allowEmpty: true # Allows deleting all application resources during automatic syncing ( false by default ).
    syncOptions: # Sync options which modifies sync behavior
      - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
      - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.
      - PruneLast=true # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation
      - Replace=true # Because kubectl adds metadata that will cross the limit allowed by Kubernetes, Replace overcomes this limitation.
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  revisionHistoryLimit: 3
---
# Source: atomi-app-of-apps/templates/applications.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: pichu-opal-metric-server
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations:
    "atomi.cloud/cluster": "opal"
    "atomi.cloud/landscape": "pichu"
    "atomi.cloud/layer": "1"
    "atomi.cloud/platform": "systems"
    "atomi.cloud/service": "bootstrap"
    argocd.argoproj.io/sync-wave: "2"
  labels:
    helm.sh/chart: atomi-app-of-apps-1.0.0
    app.kubernetes.io/name: atomi-app-of-apps
    app.kubernetes.io/instance: app-of-apps
    "atomi.cloud/cluster": "opal"
    "atomi.cloud/landscape": "pichu"
    "atomi.cloud/layer": "1"
    "atomi.cloud/platform": "systems"
    "atomi.cloud/service": "bootstrap"
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
    atomi.cloud/bootstrap-type: agnostic
spec:
  project: default
  source:
    repoURL: https://github.com/AtomiCloud/helm.systems_metric-server
    targetRevision: HEAD
    path: chart
    helm:
      ignoreMissingValueFiles: false
      parameters: []
      passCredentials: false
      releaseName: metric-server
      skipCrds: false
      valueFiles:
        - values.yaml
        - values.pichu.opal.yaml
  destination:
    server: https://d1943bf9-8108-45d0-a666-9782e2e848c7.vultr-k8s.com:6443
    namespace: kube-system
  # Sync policy
  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
      allowEmpty: true # Allows deleting all application resources during automatic syncing ( false by default ).
    syncOptions: # Sync options which modifies sync behavior
      - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
      - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.
      - PruneLast=true # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation
      - Replace=true # Because kubectl adds metadata that will cross the limit allowed by Kubernetes, Replace overcomes this limitation.
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  revisionHistoryLimit: 3
---
# Source: atomi-app-of-apps/templates/applications.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: pichu-opal-otel
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations:
    "atomi.cloud/cluster": "opal"
    "atomi.cloud/landscape": "pichu"
    "atomi.cloud/layer": "1"
    "atomi.cloud/platform": "systems"
    "atomi.cloud/service": "bootstrap"
    argocd.argoproj.io/sync-wave: "2"
  labels:
    helm.sh/chart: atomi-app-of-apps-1.0.0
    app.kubernetes.io/name: atomi-app-of-apps
    app.kubernetes.io/instance: app-of-apps
    "atomi.cloud/cluster": "opal"
    "atomi.cloud/landscape": "pichu"
    "atomi.cloud/layer": "1"
    "atomi.cloud/platform": "systems"
    "atomi.cloud/service": "bootstrap"
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
    atomi.cloud/bootstrap-type: agnostic
spec:
  project: default
  source:
    repoURL: https://github.com/AtomiCloud/helm.systems_otel-operator
    targetRevision: HEAD
    path: chart
    helm:
      ignoreMissingValueFiles: false
      parameters: []
      passCredentials: false
      releaseName: otel
      skipCrds: false
      valueFiles:
        - values.yaml
        - values.pichu.opal.yaml
  destination:
    server: https://d1943bf9-8108-45d0-a666-9782e2e848c7.vultr-k8s.com:6443
    namespace: otel
  # Sync policy
  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
      allowEmpty: true # Allows deleting all application resources during automatic syncing ( false by default ).
    syncOptions: # Sync options which modifies sync behavior
      - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
      - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.
      - PruneLast=true # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation
      - Replace=true # Because kubectl adds metadata that will cross the limit allowed by Kubernetes, Replace overcomes this limitation.
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  revisionHistoryLimit: 3
---
# Source: atomi-app-of-apps/templates/applications.yaml
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: pichu-opal-policies
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations:
    "atomi.cloud/cluster": "opal"
    "atomi.cloud/landscape": "pichu"
    "atomi.cloud/layer": "1"
    "atomi.cloud/platform": "systems"
    "atomi.cloud/service": "bootstrap"
    argocd.argoproj.io/sync-wave: "1"
  labels:
    helm.sh/chart: atomi-app-of-apps-1.0.0
    app.kubernetes.io/name: atomi-app-of-apps
    app.kubernetes.io/instance: app-of-apps
    "atomi.cloud/cluster": "opal"
    "atomi.cloud/landscape": "pichu"
    "atomi.cloud/layer": "1"
    "atomi.cloud/platform": "systems"
    "atomi.cloud/service": "bootstrap"
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
    atomi.cloud/bootstrap-type: agnostic
spec:
  project: default
  source:
    repoURL: https://github.com/AtomiCloud/helm.systems_kyverno-policies
    targetRevision: HEAD
    path: chart
    helm:
      ignoreMissingValueFiles: false
      parameters: []
      passCredentials: false
      releaseName: kyverno-policies
      skipCrds: false
      valueFiles:
        - values.yaml
        - values.pichu.opal.yaml
  destination:
    server: https://d1943bf9-8108-45d0-a666-9782e2e848c7.vultr-k8s.com:6443
    namespace: policy-engine
  # Sync policy
  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
      allowEmpty: true # Allows deleting all application resources during automatic syncing ( false by default ).
    syncOptions: # Sync options which modifies sync behavior
      - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
      - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.
      - PruneLast=true # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation
      - Replace=true # Because kubectl adds metadata that will cross the limit allowed by Kubernetes, Replace overcomes this limitation.
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  revisionHistoryLimit: 3
---
# Source: atomi-app-of-apps/templates/applications.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: pichu-opal-reloader
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations:
    "atomi.cloud/cluster": "opal"
    "atomi.cloud/landscape": "pichu"
    "atomi.cloud/layer": "1"
    "atomi.cloud/platform": "systems"
    "atomi.cloud/service": "bootstrap"
    argocd.argoproj.io/sync-wave: "2"
  labels:
    helm.sh/chart: atomi-app-of-apps-1.0.0
    app.kubernetes.io/name: atomi-app-of-apps
    app.kubernetes.io/instance: app-of-apps
    "atomi.cloud/cluster": "opal"
    "atomi.cloud/landscape": "pichu"
    "atomi.cloud/layer": "1"
    "atomi.cloud/platform": "systems"
    "atomi.cloud/service": "bootstrap"
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
    atomi.cloud/bootstrap-type: agnostic
spec:
  project: default
  source:
    repoURL: https://github.com/AtomiCloud/helm.systems_reloader
    targetRevision: HEAD
    path: chart
    helm:
      ignoreMissingValueFiles: false
      parameters: []
      passCredentials: false
      releaseName: reloader
      skipCrds: false
      valueFiles:
        - values.yaml
        - values.pichu.opal.yaml
  destination:
    server: https://d1943bf9-8108-45d0-a666-9782e2e848c7.vultr-k8s.com:6443
    namespace: reloader
  # Sync policy
  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
      allowEmpty: true # Allows deleting all application resources during automatic syncing ( false by default ).
    syncOptions: # Sync options which modifies sync behavior
      - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
      - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.
      - PruneLast=true # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation
      - Replace=true # Because kubectl adds metadata that will cross the limit allowed by Kubernetes, Replace overcomes this limitation.
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  revisionHistoryLimit: 3
