{{- range $k, $v := .Values.virtualClusters }}
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: {{ $k }}-{{ $.Values.serviceTree.cluster }}
  annotations: {{- include "sulfoxide-carbon.annotations" $ | nindent 4 }}
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-weight": "1"
  labels: {{- include "sulfoxide-carbon.labels" $ | nindent 4 }}
spec:
  provider:
    kubernetes:
      server:
        url: "{{ $.Values.destination }}"
        caProvider:
          type: Secret
          name: "{{ $.Values.serviceTree.landscape }}-{{ $.Values.serviceTree.cluster }}-cluster-secret-ca-crt"
          key: ca.crt
      remoteNamespace: {{ $k }}
      auth:
        token:
          bearerToken:
            name: "{{ $.Values.serviceTree.landscape }}-{{ $.Values.serviceTree.cluster }}-cluster-secret-bearer-token"
            key: "BEARER_TOKEN"
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $k }}-{{ $.Values.serviceTree.cluster }}-cluster-secret
  annotations: {{- include "sulfoxide-carbon.annotations" $ | nindent 4 }}
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "1"
  labels: {{- include "sulfoxide-carbon.labels" $ | nindent 4 }}
spec:
  refreshInterval: {{ $v.refreshInterval }}
  secretStoreRef:
    name: {{ $k }}-{{ $.Values.serviceTree.cluster }}
    kind: SecretStore
  target:
    name: {{ $k }}-cluster-secret
    creationPolicy: {{ $v.policy.creation }}
    deletionPolicy: {{ $v.policy.deletion }}
    template:
      metadata:
        labels: {{- include "sulfoxide-carbon.labels" $ | nindent 10 }}
          argocd.argoproj.io/secret-type: cluster
        annotations: {{- include "sulfoxide-carbon.annotations" $ | nindent 10 }}
          argocd.argoproj.io/secret-type: cluster
      data:
        name: "{{ $k }}-{{ $.Values.serviceTree.cluster }}"
        server: "https://{{ $k }}.{{ $.Values.serviceTree.cluster }}.{{ $v.apiServerBaseDomain }}"
        config: |
          {
            "tlsClientConfig": {
              "caData": "{{ `{{ .ca | b64enc }}` }}",
              "certData": "{{ `{{ .cert | b64enc }}` }}",
              "keyData": "{{ `{{ .key | b64enc }}` }}",
              "insecure": false
            }
          }
  data:
    - secretKey: "ca"
      remoteRef:
        key: "vc-{{ $.Values.serviceTree.landscape }}-{{ $k }}-iodine"
        property: certificate-authority
    - secretKey: "cert"
      remoteRef:
        key: "vc-{{ $.Values.serviceTree.landscape }}-{{ $k }}-iodine"
        property: client-certificate
    - secretKey: "key"
      remoteRef:
        key: "vc-{{ $.Values.serviceTree.landscape }}-{{ $k }}-iodine"
        property: client-key
---
{{- end }}