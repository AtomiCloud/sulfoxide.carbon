{{- range $k, $v := .Values.apps }}
{{- if $v.deploy }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ $.Values.serviceTree.landscape }}-{{ $.Values.serviceTree.cluster}}-{{ $k }}
  annotations:
    {{- include "sulfoxide-carbon.annotations" $ | nindent 4 }}
    argocd.argoproj.io/sync-wave: "{{ $v.sync }}"
  labels:
    {{- include "sulfoxide-carbon.labels" $ | nindent 4 }}
spec:
  project: {{ $.Values.projectName }}
  source:
    repoURL: {{ $v.repo }}
    targetRevision: {{ $v.version }}
    {{- if $v.path }}
    path: {{ $v.path }}
    {{- end }}
    helm:
      ignoreMissingValueFiles: false
      {{- if $v.parameters }}
      parameters: {{- toYaml $v.parameters | nindent 8 }}
      {{- else }}
      parameters: [ ]
      {{- end }}
      passCredentials: false
      {{- with $v.release }}
      releaseName: {{ $.Values.serviceTree.landscape }}-{{ . }}
      {{- end }}
      skipCrds: false
      valueFiles:
        {{- toYaml $v.values | nindent 8 }}


    {{- if $v.chart }}
    chart: {{ $v.chart }}
    {{- end }}
  destination:
    server: {{ $v.destination | default $.Values.destination }}
    namespace: {{ $v.namespace }}
  # Sync policy
  syncPolicy:
    {{- if $v.autoSync }}
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
      allowEmpty: true # Allows deleting all application resources during automatic syncing ( false by default ).
    {{- end }}
    syncOptions: # Sync options which modifies sync behavior
      - CreateNamespace={{ $v.createNamespace }} # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
      - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.
      - PruneLast={{ $v.pruneLast }} # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation
      - Replace={{ $v.replace }} # Because kubectl adds metadata that will cross the limit allowed by Kubernetes, Replace overcomes this limitation.
      - ServerSideApply={{ $v.serverSideApply }}
      {{- if $v.respectIgnoreDifferences }}
      - RespectIgnoreDifferences={{ $v.respectIgnoreDifferences }}
      {{- end }}
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  revisionHistoryLimit: {{ $.Values.revisionLimit }}
  {{- with $v.ignoreDifferences }}
  ignoreDifferences:
  {{ toYaml . | nindent 4 }}
  {{- end }}
  {{- end }}
---
{{- end }}